pipeline {
  agent any

  parameters {
    choice(name: 'ENV', choices: ['dev', 'prod'], description: 'Target environment')
  }

  environment {
    TF_WORKSPACE = "${params.ENV}"
    TF_DIR = "environments/${params.ENV}"
  }

  stages {
    stage('Init') {
      steps {
        dir("${TF_DIR}") {
          withCredentials([usernamePassword(credentialsId: 'aws-creds', usernameVariable: 'AWS_ACCESS_KEY_ID', passwordVariable: 'AWS_SECRET_ACCESS_KEY')]) {
            sh """
              export AWS_ACCESS_KEY_ID=$AWS_ACCESS_KEY_ID
              export AWS_SECRET_ACCESS_KEY=$AWS_SECRET_ACCESS_KEY
              terraform init -reconfigure \\
              -backend-config="bucket=dynomo-db-bucket" \
              -backend-config="key=eks/${params.ENV}/terraform.tfstate" \
              -backend-config="region=ap-southeast-2" \
              -backend-config="dynamodb_table=terraform-locks"
            """
          }
        }
      }
    }

    stage('Plan') {
      steps {
        dir("${TF_DIR}") {
          withCredentials([usernamePassword(credentialsId: 'aws-creds', usernameVariable: 'AWS_ACCESS_KEY_ID', passwordVariable: 'AWS_SECRET_ACCESS_KEY')]) {
            sh '''
              export AWS_ACCESS_KEY_ID=$AWS_ACCESS_KEY_ID
              export AWS_SECRET_ACCESS_KEY=$AWS_SECRET_ACCESS_KEY
              terraform plan -out=tfplan
            '''
          }
        }
      }
    }

    stage('Apply') {
      steps {
        input message: "Approve deployment to ${params.ENV}?"
        dir("${TF_DIR}") {
          withCredentials([usernamePassword(credentialsId: 'aws-creds', usernameVariable: 'AWS_ACCESS_KEY_ID', passwordVariable: 'AWS_SECRET_ACCESS_KEY')]) {
            sh '''
              export AWS_ACCESS_KEY_ID=$AWS_ACCESS_KEY_ID
              export AWS_SECRET_ACCESS_KEY=$AWS_SECRET_ACCESS_KEY
              terraform apply tfplan
            '''
          }
        }
      }
    }
  }
}
